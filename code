
my circuit only has 4 binary outputs. 
the program controls the motors direction value D, as either clockwise or anti-clockwise
and and angle input is value G in degrees to one decimal place, example 33.1 degrees.
the code request the angle and then this is converted into a series of steps using the below table starting with the chosen direction
the stepper table for the 4 pole stepper motor is as follows

1. Set the desired angle (G) to one decimal place and direction (D) of the motor left or right
2. Calculate the number of steps required to reach the desired angle 
using this table
binary control lines are A,B,C,D

| Step | A | B | C | D |
|-----|:-:|:-:|:-:|:-:|
| 1   | 1 | 0 | 0 | 0 |
| 2   | 1 | 1 | 0 | 0 |
| 3   | 0 | 1 | 0 | 0 |
| 4   | 0 | 1 | 1 | 0 |
| 5   | 0 | 0 | 1 | 0 |
| 6   | 0 | 0 | 1 | 1 |
| 7   | 0 | 0 | 0 | 1 |
| 8   | 1 | 0 | 0 | 1 |



3. Set the stepper motor speed , value (S)
4. Create a loop that runs for the number of steps and out put them to the binary control lines A,B,C,D
5. Within the loop, turn the motor on and then off, in order to move the motor one step forward 
6. After the loop is complete, turn the motor off 
7. Check to ensure the motor has reached the desired angle and direction

////////
 create an Algorithm to control the direction of rotation of a 4 pole stepper motor
using this table
of binary control lines are A,B,C,D

| Step | A | B | C | D |
|-----|:-:|:-:|:-:|:-:|
| 1   | 1 | 0 | 0 | 0 |
| 2   | 1 | 1 | 0 | 0 |
| 3   | 0 | 1 | 0 | 0 |
| 4   | 0 | 1 | 1 | 0 |
| 5   | 0 | 0 | 1 | 0 |
| 6   | 0 | 0 | 1 | 1 |
| 7   | 0 | 0 | 0 | 1 |
| 8   | 1 | 0 | 0 | 1 |

---

Algorithm:

1. Set all control lines to 0 (A,B,C,D).
2. Increment the step number. 
3. Depending on the step number, set the appropriate control lines to 1. 
4. Repeat steps 2 and 3. 

For example, if the step number is 2, set control line A and B to 1. If the step number is 4, set control lines B and C to 1. 

Once the step number reaches 8, reset the step number back to 1 and repeat the process.
/////////////////////







write c code to control one stepper motor that has 4 inputs. 
---
#include <stdio.h>

//declare variables
int G, D, S, i;
//declare control lines
int A, B, C, D;

//main function
int main(void)
{
    //Get the desired angle (G) and direction (D) from user
    printf("Please enter the desired angle (G) and direction (D) of the motor (left or right) \n");
    scanf("%d %d", &G, &D);
    //Get the speed (S)
    printf("Please enter the speed (S) of the motor: \n");
    scanf("%d", &S);

    //Calculate number of steps needed to reach desired angle
    int steps = G * 8 / 360;

    //Loop to output steps to control lines
    for (i=0; i<steps; i++) {
        //Set control lines depending on direction
        if (D == 0) { //clockwise
            switch (i % 8) {
                case 0:
                    A = 1;
                    B = 0;
                    C = 0;
                    D = 0;
                    break;
                case 1:
                    A = 1;
                    B = 1;
                    C = 0;
                    D = 0;
                    break;
                case 2:
                    A = 0;
                    B = 1;
                    C = 0;
                    D = 0;
                    break;
                case 3:
                    A = 0;
                    B = 1;
                    C = 1;
                    D = 0;
                    break;
                case 4:
                    A = 0;
                    B = 0;
                    C = 1;
                    D = 0;
                    break;
                case 5:
                    A = 0;
                    B = 0;
                    C = 1;
                    D = 1;
                    break;
                case 6:
                    A = 0;
                    B = 0;
                    C = 0;
                    D = 1;
                    break;
                case 7:
                    A = 1;
                    B = 0;
                    C = 0;
                    D = 1;
                    break;
            }
        } else { //anti-clockwise
            switch (i % 8) {
                case 0:
                    A = 1;
                    B = 0;
                    C = 0;
                    D = 1;
                    break;
                case 1:
                    A = 0;
                    B = 0;
                    C = 0;
                    D = 1;
                    break;
                case 2:
                    A = 0;
                    B = 0;
                    C = 1;
                    D = 1;
                    break;
                case 3:
                    A = 0;
                    B = 0;
                    C = 1;
                    D = 0;
                    break;
                case 4:
                    A = 0;
                    B = 1;
                    C = 1;
                    D = 0;
                    break;
                case 5:
                    A = 0;
                    B = 1;
                    C = 0;
                    D = 0;
                    break;
                case 6:
                    A = 1;
                    B = 1;
                    C = 0;
                    D = 0;
                    break;
                case 7:
                    A = 1;
                    B = 0;
                    C = 0;
                    D = 0;
                    break;
            }
        }

        //Turn motor on and off to move one step forward
        printf("Turning motor on and off to move one step forward \n");
        //Turn motor off
        printf("Turning motor off \n");
    }

    //Check to ensure motor has reached desired angle and direction
    printf("Checking to ensure motor has reached desired angle and direction \n");

    return 0;
}
